/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.2.v201506150834.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1_0/commonapi/tests/TestInterfaceDBusProxy.hpp>

namespace v1_0 {
namespace commonapi {
namespace tests {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createTestInterfaceDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
	return std::make_shared<TestInterfaceDBusProxy>(_address, _connection);
}

INITIALIZER(registerTestInterfaceDBusProxy) {
	CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
		TestInterface::getInterface(),
		&createTestInterfaceDBusProxy);
}

TestInterfaceDBusProxy::TestInterfaceDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
	:	CommonAPI::DBus::DBusProxy(_address, _connection)
,		testPredefinedTypeAttribute_(*this, "onTestPredefinedTypeAttributeAttributeChanged", "setTestPredefinedTypeAttributeAttribute", "u", "getTestPredefinedTypeAttributeAttribute"),
		testDerivedStructAttribute_(*this, "onTestDerivedStructAttributeAttributeChanged", "setTestDerivedStructAttributeAttribute", "(sqi)", "getTestDerivedStructAttributeAttribute"),
		testDerivedArrayAttribute_(*this, "onTestDerivedArrayAttributeAttributeChanged", "setTestDerivedArrayAttributeAttribute", "at", "getTestDerivedArrayAttributeAttribute")
,		testPredefinedTypeBroadcast_(*this, "TestPredefinedTypeBroadcast", "us", std::tuple<uint32_t, std::string>()),
		testSelectiveBroadcastSelective_(*this, "TestSelectiveBroadcast", "", std::tuple<>()),
		testBroadcastWithOutArgsSelective_(*this, "TestBroadcastWithOutArgs", "us", std::tuple<uint32_t, std::string>())
{
}

        TestInterfaceDBusProxy::TestPredefinedTypeAttributeAttribute& TestInterfaceDBusProxy::getTestPredefinedTypeAttributeAttribute() {
            return testPredefinedTypeAttribute_;
        }
        TestInterfaceDBusProxy::TestDerivedStructAttributeAttribute& TestInterfaceDBusProxy::getTestDerivedStructAttributeAttribute() {
            return testDerivedStructAttribute_;
        }
        TestInterfaceDBusProxy::TestDerivedArrayAttributeAttribute& TestInterfaceDBusProxy::getTestDerivedArrayAttributeAttribute() {
            return testDerivedArrayAttribute_;
        }

        TestInterfaceDBusProxy::TestPredefinedTypeBroadcastEvent& TestInterfaceDBusProxy::getTestPredefinedTypeBroadcastEvent() {
            return testPredefinedTypeBroadcast_;
        }
        TestInterfaceDBusProxy::TestSelectiveBroadcastSelectiveEvent& TestInterfaceDBusProxy::getTestSelectiveBroadcastSelectiveEvent() {
            return testSelectiveBroadcastSelective_;
        }
        TestInterfaceDBusProxy::TestBroadcastWithOutArgsSelectiveEvent& TestInterfaceDBusProxy::getTestBroadcastWithOutArgsSelectiveEvent() {
            return testBroadcastWithOutArgsSelective_;
        }

        void TestInterfaceDBusProxy::testEmptyMethod(CommonAPI::CallStatus &_status, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodWithReply(
            *this,
            "testEmptyMethod",
            "",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _status
            );
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::testEmptyMethodAsync(TestEmptyMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodAsync(
            *this,
            "testEmptyMethod",
            "",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            std::move(_callback),
            std::tuple<>());
        }
        void TestInterfaceDBusProxy::testVoidPredefinedTypeMethod(const uint32_t &_uint32Value, const std::string &_stringValue, CommonAPI::CallStatus &_status, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<uint32_t, std::string>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodWithReply(
            *this,
            "testVoidPredefinedTypeMethod",
            "us",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _uint32Value, _stringValue,
            _status
            );
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::testVoidPredefinedTypeMethodAsync(const uint32_t &_uint32Value, const std::string &_stringValue, TestVoidPredefinedTypeMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<uint32_t, std::string>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodAsync(
            *this,
            "testVoidPredefinedTypeMethod",
            "us",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _uint32Value, _stringValue,
            std::move(_callback),
            std::tuple<>());
        }
        void TestInterfaceDBusProxy::testPredefinedTypeMethod(const uint32_t &_uint32InValue, const std::string &_stringInValue, CommonAPI::CallStatus &_status, uint32_t &_uint32OutValue, std::string &_stringOutValue, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<uint32_t, std::string>,
                                             CommonAPI::DBus::DBusSerializableArguments<uint32_t, std::string> >::callMethodWithReply(
            *this,
            "testPredefinedTypeMethod",
            "us",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _uint32InValue, _stringInValue,
            _status
            , _uint32OutValue, _stringOutValue);
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::testPredefinedTypeMethodAsync(const uint32_t &_uint32InValue, const std::string &_stringInValue, TestPredefinedTypeMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<uint32_t, std::string>,
                                             CommonAPI::DBus::DBusSerializableArguments<uint32_t, std::string> >::callMethodAsync(
            *this,
            "testPredefinedTypeMethod",
            "us",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _uint32InValue, _stringInValue,
            std::move(_callback),
            std::tuple<uint32_t, std::string>());
        }
        void TestInterfaceDBusProxy::testVoidDerivedTypeMethod(const ::commonapi::tests::DerivedTypeCollection::TestEnumExtended2 &_testEnumExtended2Value, const ::commonapi::tests::DerivedTypeCollection::TestMap &_testMapValue, CommonAPI::CallStatus &_status, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::TestEnumExtended2, ::commonapi::tests::DerivedTypeCollection::TestMap>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodWithReply(
            *this,
            "testVoidDerivedTypeMethod",
            "ia{ua(sq)}",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _testEnumExtended2Value, _testMapValue,
            _status
            );
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::testVoidDerivedTypeMethodAsync(const ::commonapi::tests::DerivedTypeCollection::TestEnumExtended2 &_testEnumExtended2Value, const ::commonapi::tests::DerivedTypeCollection::TestMap &_testMapValue, TestVoidDerivedTypeMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::TestEnumExtended2, ::commonapi::tests::DerivedTypeCollection::TestMap>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodAsync(
            *this,
            "testVoidDerivedTypeMethod",
            "ia{ua(sq)}",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _testEnumExtended2Value, _testMapValue,
            std::move(_callback),
            std::tuple<>());
        }
        void TestInterfaceDBusProxy::testDerivedTypeMethod(const ::commonapi::tests::DerivedTypeCollection::TestEnumExtended2 &_testEnumExtended2InValue, const ::commonapi::tests::DerivedTypeCollection::TestMap &_testMapInValue, CommonAPI::CallStatus &_status, ::commonapi::tests::DerivedTypeCollection::TestEnumExtended2 &_testEnumExtended2OutValue, ::commonapi::tests::DerivedTypeCollection::TestMap &_testMapOutValue, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::TestEnumExtended2, ::commonapi::tests::DerivedTypeCollection::TestMap>,
                                             CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::TestEnumExtended2, ::commonapi::tests::DerivedTypeCollection::TestMap> >::callMethodWithReply(
            *this,
            "testDerivedTypeMethod",
            "ia{ua(sq)}",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _testEnumExtended2InValue, _testMapInValue,
            _status
            , _testEnumExtended2OutValue, _testMapOutValue);
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::testDerivedTypeMethodAsync(const ::commonapi::tests::DerivedTypeCollection::TestEnumExtended2 &_testEnumExtended2InValue, const ::commonapi::tests::DerivedTypeCollection::TestMap &_testMapInValue, TestDerivedTypeMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::TestEnumExtended2, ::commonapi::tests::DerivedTypeCollection::TestMap>,
                                             CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::TestEnumExtended2, ::commonapi::tests::DerivedTypeCollection::TestMap> >::callMethodAsync(
            *this,
            "testDerivedTypeMethod",
            "ia{ua(sq)}",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _testEnumExtended2InValue, _testMapInValue,
            std::move(_callback),
            std::tuple<::commonapi::tests::DerivedTypeCollection::TestEnumExtended2, ::commonapi::tests::DerivedTypeCollection::TestMap>());
        }
        void TestInterfaceDBusProxy::TestArrayOfPolymorphicStructMethod(const std::vector<std::shared_ptr<::commonapi::tests::DerivedTypeCollection::TestPolymorphicStruct>> &_inArray, CommonAPI::CallStatus &_status, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<std::vector<std::shared_ptr<::commonapi::tests::DerivedTypeCollection::TestPolymorphicStruct>>>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodWithReply(
            *this,
            "TestArrayOfPolymorphicStructMethod",
            "a(uv)",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inArray,
            _status
            );
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::TestArrayOfPolymorphicStructMethodAsync(const std::vector<std::shared_ptr<::commonapi::tests::DerivedTypeCollection::TestPolymorphicStruct>> &_inArray, TestArrayOfPolymorphicStructMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<std::vector<std::shared_ptr<::commonapi::tests::DerivedTypeCollection::TestPolymorphicStruct>>>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodAsync(
            *this,
            "TestArrayOfPolymorphicStructMethod",
            "a(uv)",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inArray,
            std::move(_callback),
            std::tuple<>());
        }
        void TestInterfaceDBusProxy::TestMapOfPolymorphicStructMethod(const ::commonapi::tests::DerivedTypeCollection::MapIntToPolymorphic &_inMap, CommonAPI::CallStatus &_status, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::MapIntToPolymorphic>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodWithReply(
            *this,
            "TestMapOfPolymorphicStructMethod",
            "a{y(uv)}",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inMap,
            _status
            );
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::TestMapOfPolymorphicStructMethodAsync(const ::commonapi::tests::DerivedTypeCollection::MapIntToPolymorphic &_inMap, TestMapOfPolymorphicStructMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::MapIntToPolymorphic>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodAsync(
            *this,
            "TestMapOfPolymorphicStructMethod",
            "a{y(uv)}",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inMap,
            std::move(_callback),
            std::tuple<>());
        }
        void TestInterfaceDBusProxy::TestStructWithPolymorphicMemberMethod(const ::commonapi::tests::DerivedTypeCollection::StructWithPolymorphicMember &_inStruct, CommonAPI::CallStatus &_status, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::StructWithPolymorphicMember>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodWithReply(
            *this,
            "TestStructWithPolymorphicMemberMethod",
            "(u(uv))",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inStruct,
            _status
            );
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::TestStructWithPolymorphicMemberMethodAsync(const ::commonapi::tests::DerivedTypeCollection::StructWithPolymorphicMember &_inStruct, TestStructWithPolymorphicMemberMethodAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::StructWithPolymorphicMember>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodAsync(
            *this,
            "TestStructWithPolymorphicMemberMethod",
            "(u(uv))",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inStruct,
            std::move(_callback),
            std::tuple<>());
        }
        void TestInterfaceDBusProxy::TestStructWithEnumKeyMapMember(const ::commonapi::tests::DerivedTypeCollection::StructWithEnumKeyMap &_inStruct, CommonAPI::CallStatus &_status, const CommonAPI::CallInfo *_info) {
            CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::StructWithEnumKeyMap>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodWithReply(
            *this,
            "TestStructWithEnumKeyMapMember",
            "(a{is})",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inStruct,
            _status
            );
        }
        std::future<CommonAPI::CallStatus> TestInterfaceDBusProxy::TestStructWithEnumKeyMapMemberAsync(const ::commonapi::tests::DerivedTypeCollection::StructWithEnumKeyMap &_inStruct, TestStructWithEnumKeyMapMemberAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
            return CommonAPI::DBus::DBusProxyHelper<CommonAPI::DBus::DBusSerializableArguments<::commonapi::tests::DerivedTypeCollection::StructWithEnumKeyMap>,
                                             CommonAPI::DBus::DBusSerializableArguments<> >::callMethodAsync(
            *this,
            "TestStructWithEnumKeyMapMember",
            "(a{is})",
            (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
            _inStruct,
            std::move(_callback),
            std::tuple<>());
        }


        void TestInterfaceDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
            ownVersionMajor = 1;
            ownVersionMinor = 0;
        }

        } // namespace tests
        } // namespace commonapi
        } // namespace v1_0
