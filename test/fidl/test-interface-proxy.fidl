// Copyright (C) 2013-2015 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

package commonapi.tests

import commonapi.tests.* from "test-derived-types.fidl"

interface TestInterface {
    version { major 1 minor 0 }

    attribute UInt32 TestPredefinedTypeAttribute
    attribute DerivedTypeCollection.TestStructExtended TestDerivedStructAttribute
    attribute DerivedTypeCollection.TestArrayUInt64 TestDerivedArrayAttribute

    method testEmptyMethod {
    }

    method testVoidPredefinedTypeMethod {
        in {
            UInt32 uint32Value
            String stringValue
        }
    }

    method testPredefinedTypeMethod {
        in {
            UInt32 uint32InValue
            String stringInValue
        }
        out {
            UInt32 uint32OutValue
            String stringOutValue
        }
    }

    method testVoidDerivedTypeMethod {
        in {
            DerivedTypeCollection.TestEnumExtended2 testEnumExtended2Value
            DerivedTypeCollection.TestMap testMapValue
        }
    }

    method testDerivedTypeMethod {
        in {
            DerivedTypeCollection.TestEnumExtended2 testEnumExtended2InValue
            DerivedTypeCollection.TestMap testMapInValue
        }
        out {
            DerivedTypeCollection.TestEnumExtended2 testEnumExtended2OutValue
            DerivedTypeCollection.TestMap testMapOutValue
        }
    }

    method TestArrayOfPolymorphicStructMethod {
        in {
            DerivedTypeCollection.TestPolymorphicStruct [] inArray
        }
    }

    method TestMapOfPolymorphicStructMethod {
        in {
            DerivedTypeCollection.MapIntToPolymorphic inMap
        }
    }
    
    method TestStructWithPolymorphicMemberMethod {
        in {
            DerivedTypeCollection.StructWithPolymorphicMember inStruct
        }
    }
    
    method TestStructWithEnumKeyMapMember {
        in {
            DerivedTypeCollection.StructWithEnumKeyMap inStruct
        }
    }

    method testErrorReplyMethod {
        in {
            String name
        }
        out {
            String message
        }
    }

    method testOverloadedMethod {
        in {
            UInt8 x
        }
        out {
            UInt8 y
        }
    }

    method testOverloadedMethod {
        in {
            UInt8 x
            UInt8 y
        }
        out {
            UInt8 z
        }
    }

    broadcast TestPredefinedTypeBroadcast {
        out {
            UInt32 uint32Value
            String stringValue
        }
    }

    broadcast TestSelectiveBroadcast selective {
    }
        
    broadcast TestBroadcastWithOutArgs selective {
        out {
            UInt32 uint32Value
            String stringValue
        }        
    }

    broadcast disconnectedError {
        out {
            String errorName
            String errorDescription
            Int32 errorCode
        }
    }
}

interface ExtendedInterface extends TestInterface {
    version { major 1 minor 0 }

    method TestIntMethodExtended {
        in {
            UInt32 inInt
        }
    } 
}

interface TestInterfaceManager manages TestInterface {
    version { major 1 minor 0 }
}
